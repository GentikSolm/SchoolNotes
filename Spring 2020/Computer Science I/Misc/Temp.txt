int sortArray(string items[], double countCost[][2], int size){
	/*
	NOTE: This loop is fairly complicated, as i created it to not only sort the string array
	but also clear duplicates, while at the same time managing the doubble array that is
	parrallel to the string array.
	*/

	// Duplicates counter
	int dup = 0;
	bool sorted;
	// Sort loop
	do{
		sorted = true;
		for(int j = 0; j < size-1; j++){
			// Because its used twice, stored as var to save process power
			//Not sure why this threw error when i didnt have it convert to c_str,
			// but adding the function seems to of fixed the error
			int compare = strcmp(items[j].c_str(), items[j+1].c_str());

			/*
			This is the complicated part.
			The first statement sees if items[j] > items[j+1]
				AND
			that item[j+1] is not blank.
			This is required because if items[j] > items[j+1], and items[j+1]
			is blank, next loop will trigger the second statement, items[j] == "" and items[j+1] != ""

			The second statemt is needed because when items[j] =="", and items[j+1] != "", compare will be < 0.
			because we do not want blank space at the start of the array, we need to swap these cases aswell.
			*/
			if((compare > 0 && items[j+1] != "") || (items[j] == "" && items[j+1] != "")){
				// This if statement catches all 'out of order' array indexes.
				sorted = false;
				// This swaps values of the strings and their countCost parrallels
				swap(items[j], items[j+1]);
				swap(countCost[j][0], countCost[j+1][0]);
				swap(countCost[j][1], countCost[j+1][1]);
			} else if(compare == 0 && items[j] != ""){
				// this catches all duplicates and adds the duplicates
				// according countCost index values to the origionals value.
				sorted = false;
				dup++;
				items[j+1].clear();
				countCost[j][0] += countCost[j+1][0];
				countCost[j][1] += countCost[j+1][1];
			}
		}
	}while(!sorted);

	// This finds out how many unique entries there are
	int newSize = size;
	// If no duplicates, returns origional size.
	if(dup > 0){
		newSize = 0;
		for(int k = 0; k < size; k++){
			if(items[k] != ""){
				newSize++;
			} else break;
		}
	}
	return newSize;
}
